#!/usr/bin/perl
################################################################################
#                                                                              #
#   Copyright:
#   This Source Code Form is subject to the terms of the Mozilla Public
#   License, v. 2.0. If a copy of the MPL was not distributed with this
#   file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
#   Contributors: Richard Yim*
#
#  *Centre for Cancer
#   Faculty of Medical Sciences
#   Newcastle University
#   UK
#
#   Installation instructions are in README.md
#                                                                              #
################################################################################

use warnings;
use strict;
use Digest::MD5 qw(md5_base64);
use FindBin;
my $bindir = $FindBin::Bin;

#   Check all files are present
my @dependencies = (
    $bindir . "/oneliner.template"
);
my $missingdependencies = 0;
foreach my $file (@dependencies) {
    unless (-e $file) {
        print "Fatal error: Missing dependency:\n$file\n";
        $missingdependencies = 1;
    }
}
exit(1) if $missingdependencies == 1;       # Crap out if missing files

#   General idiotproofing
if (!$ARGV[0]) {
    print "Invalid input.\n";
    exit(1);
} elsif ($ARGV[1]) {
    print "Put command and its arguments in double quotes: \"\"\n";
    exit(1);
}

#   Get local time in usable format
my @time = localtime();
my $year = $time[5] + 1900;                 # Year AD
$time[4] += 1;                              # Count months from 1
my $timestring = sprintf("$year%02d%02d_%02d%02d%02d",
    $time[4], $time[3], $time[2], $time[1], $time[0]
);

#   Parse in command line
my $command = $ARGV[0];
(my $procname = $command) =~ s/\s.*//;      # Set a name for process
$procname =~ s/\W/_/g;
print "Process name:\t$procname\nCommand passed:\t$command\n";

#   Make a random number and add it to the MD5sum of the command
my $randomnum = int(rand(100000));
$randomnum = $randomnum . md5_base64($command);
$randomnum =~ s/\W/_/g;

#   Write Slurm script
open(IN, $bindir . "/oneliner.template");
open(OUT, ">$bindir/.oneliner.temp")
    or die "Script not in writeable filesystem.\n";
foreach my $line (<IN>) {
    $line =~ s/NAME/$procname/g;
    $line =~ s/COMMAND/$command/g;
    $line =~ s/PASSEDRANDOMNUMBER/$randomnum/g;
    print OUT $line;
}
close(OUT);
close(IN);

#   Run sbatch script
system("sbatch "
        ."-e $procname.e${timestring}_$randomnum "
        ."-o $procname.o${timestring}_$randomnum "
        ."--job-name=$procname.${timestring}_$randomnum "
        ."$bindir/.oneliner.temp"
);







